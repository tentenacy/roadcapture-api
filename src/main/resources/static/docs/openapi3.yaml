openapi: 3.0.1
info:
  title: Roadcapture API
  description: Roadcapture API Description
  version: 0.1.0
servers:
- url: http://localhost:8080
tags:
- name: users
  description: Users related resources
paths:
  /users:
    get:
      tags:
      - users
      operationId: 조회 성공
      parameters:
      - name: page
        in: query
        description: 조회할 페이지입니다. 0부터 시작합니다.
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: 한 페이지에 보여줄 사이즈 수입니다.
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: 정렬 기준입니다.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users-804852034'
              examples:
                조회 성공:
                  value: "{\"content\":[{\"id\":1,\"username\":\"user1\",\"profileImageUrl\"\
                    :\"https://test.com/test\"},{\"id\":2,\"username\":\"user2\",\"\
                    profileImageUrl\":\"https://test.com/test\"},{\"id\":3,\"username\"\
                    :\"user3\",\"profileImageUrl\":\"https://test.com/test\"},{\"\
                    id\":4,\"username\":\"user4\",\"profileImageUrl\":\"https://test.com/test\"\
                    },{\"id\":5,\"username\":\"user5\",\"profileImageUrl\":\"https://test.com/test\"\
                    },{\"id\":6,\"username\":\"user6\",\"profileImageUrl\":\"https://test.com/test\"\
                    },{\"id\":7,\"username\":\"user7\",\"profileImageUrl\":\"https://test.com/test\"\
                    },{\"id\":8,\"username\":\"user8\",\"profileImageUrl\":\"https://test.com/test\"\
                    },{\"id\":9,\"username\":\"user9\",\"profileImageUrl\":\"https://test.com/test\"\
                    },{\"id\":10,\"username\":\"user10\",\"profileImageUrl\":\"https://test.com/test\"\
                    }],\"pageable\":{\"sort\":{\"unsorted\":true,\"empty\":true,\"\
                    sorted\":false},\"offset\":0,\"pageSize\":10,\"pageNumber\":0,\"\
                    paged\":true,\"unpaged\":false},\"totalPages\":1,\"totalElements\"\
                    :10,\"last\":true,\"size\":10,\"number\":0,\"sort\":{\"unsorted\"\
                    :true,\"empty\":true,\"sorted\":false},\"first\":true,\"numberOfElements\"\
                    :10,\"empty\":false}"
    post:
      tags:
      - users
      operationId: '회원가입 '
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/users-725712466'
            examples:
              회원가입 닉네임 길이가 12보다 길면 실패:
                value: "{\"email\":\"test@gmail.com\",\"password\":\"abcd1234\",\"\
                  username\":\"testtesttesttest\"}"
              회원가입 닉네임 길이가 2보다 짧으면 실패:
                value: "{\"email\":\"test@gmail.com\",\"password\":\"abcd1234\",\"\
                  username\":\"t\"}"
              회원가입 닉네임 중복 시 실패:
                value: "{\"email\":\"test@gmail.com\",\"password\":\"abcd1234\",\"\
                  username\":\"user1\"}"
              회원가입 비밀번호 길이가 64보다 길면 실패:
                value: "{\"email\":\"test@gmail.com\",\"password\":\"abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwxyz0123456789\"\
                  ,\"username\":\"test\"}"
              회원가입 비밀번호 길이가 8보다 짧으면 실패:
                value: "{\"email\":\"test@gmail.com\",\"password\":\"abcd123\",\"\
                  username\":\"test\"}"
              회원가입 비밀번호 형식 맞지 않으면 실패:
                value: "{\"email\":\"test@gmail.com\",\"password\":\"abcdefgh\",\"\
                  username\":\"test\"}"
              회원가입 성공:
                value: "{\"email\":\"test@gmail.com\",\"password\":\"abcd1234\",\"\
                  username\":\"test\"}"
              회원가입 이메일 중복 시 실패:
                value: "{\"email\":\"user1@gmail.com\",\"password\":\"abcd1234\",\"\
                  username\":\"test\"}"
              회원가입 이메일 형식 맞지 않으면 실패:
                value: "{\"email\":\"test\",\"password\":\"abcd1234\",\"username\"\
                  :\"test\"}"
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users-395173474'
              examples:
                회원가입 닉네임 길이가 12보다 길면 실패:
                  value: "{\"code\":\"CMM-001\",\"status\":400,\"message\":\"Invalid\
                    \ Input Value\",\"errors\":[{\"field\":\"username\",\"value\"\
                    :\"testtesttesttest\",\"reason\":\"size must be between 2 and\
                    \ 12\"}]}"
                회원가입 닉네임 길이가 2보다 짧으면 실패:
                  value: "{\"code\":\"CMM-001\",\"status\":400,\"message\":\"Invalid\
                    \ Input Value\",\"errors\":[{\"field\":\"username\",\"value\"\
                    :\"t\",\"reason\":\"size must be between 2 and 12\"}]}"
                회원가입 닉네임 중복 시 실패:
                  value: "{\"code\":\"USR-005\",\"status\":400,\"message\":\"중복된 닉\
                    네임의 계정이 존재합니다.\",\"errors\":[]}"
                회원가입 비밀번호 길이가 64보다 길면 실패:
                  value: "{\"code\":\"CMM-001\",\"status\":400,\"message\":\"Invalid\
                    \ Input Value\",\"errors\":[{\"field\":\"password\",\"value\"\
                    :\"abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwxyz0123456789\"\
                    ,\"reason\":\"length must be between 8 and 64\"}]}"
                회원가입 비밀번호 길이가 8보다 짧으면 실패:
                  value: "{\"code\":\"CMM-001\",\"status\":400,\"message\":\"Invalid\
                    \ Input Value\",\"errors\":[{\"field\":\"password\",\"value\"\
                    :\"abcd123\",\"reason\":\"length must be between 8 and 64\"}]}"
                회원가입 비밀번호 형식 맞지 않으면 실패:
                  value: "{\"code\":\"CMM-001\",\"status\":400,\"message\":\"Invalid\
                    \ Input Value\",\"errors\":[{\"field\":\"password\",\"value\"\
                    :\"abcdefgh\",\"reason\":\"must match \\\"^(?=.*[A-Za-z])(?=.*\\\
                    \\d)[A-Za-z\\\\d]+$\\\"\"}]}"
                회원가입 이메일 중복 시 실패:
                  value: "{\"code\":\"USR-002\",\"status\":400,\"message\":\"중복된 이\
                    메일의 계정이 존재합니다.\",\"errors\":[]}"
                회원가입 이메일 형식 맞지 않으면 실패:
                  value: "{\"code\":\"CMM-001\",\"status\":400,\"message\":\"Invalid\
                    \ Input Value\",\"errors\":[{\"field\":\"email\",\"value\":\"\
                    test\",\"reason\":\"must be a well-formed email address\"}]}"
        "201":
          description: "201"
  /users/{id}:
    get:
      tags:
      - users
      operationId: '단건조회 '
      parameters:
      - name: id
        in: path
        description: 조회할 사용자 아이디입니다.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users-id1467703423'
              examples:
                단건조회 성공:
                  value: "{\"id\":1,\"username\":\"user1\",\"profileImageUrl\":\"\
                    https://test.com/test\",\"introduction\":\"안녕하세요. 저는 user1입니다\
                    .\"}"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users-id-details-883544378'
              examples:
                단건조회 회원 존재하지 않으면 실패:
                  value: "{\"code\":\"USR-003\",\"status\":400,\"message\":\"사용자가\
                    \ 존재하지 않습니다.\",\"errors\":[]}"
  /users/{id}/details:
    get:
      tags:
      - users
      operationId: '상세조회 '
      parameters:
      - name: id
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users-id-details-1536877440'
              examples:
                상세조회 성공:
                  value: "{\"id\":1,\"email\":\"user1@gmail.com\",\"username\":\"\
                    user1\",\"profileImageUrl\":\"https://test.com/test\",\"introduction\"\
                    :\"안녕하세요. 저는 user1입니다.\",\"address\":{\"addressName\":\"경기 시흥시\
                    \ 정왕동 2121-1 한국산업기술대학교\",\"roadAddressName\":\"경기 시흥시 산기대학로 237\
                    \ 한국산업기술대학교\",\"region1DepthName\":\"경기도\",\"region2DepthName\"\
                    :\"시흥시\",\"region3DepthName\":\"정왕동\",\"zoneNo\":15073}}"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users-id-details-883544378'
              examples:
                상세조회 회원 존재하지 않으면 실패:
                  value: "{\"code\":\"USR-003\",\"status\":400,\"message\":\"사용자가\
                    \ 존재하지 않습니다.\",\"errors\":[]}"
components:
  schemas:
    users-id-details-883544378:
      type: object
      properties:
        code:
          type: string
          description: 에러 코드입니다.
        message:
          type: string
          description: 에러 메시지입니다.
        errors:
          type: array
          description: 필드 에러입니다. 필드 검증 시에만 존재합니다.
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        status:
          type: number
          description: 응답 코드입니다.
    users-725712466:
      type: object
      properties:
        password:
          type: string
          description: 사용자 비밀번호입니다. 영문 숫자 조합 최소 8자 이상에서 최대 64자 이하여야 합니다.
        email:
          type: string
          description: 사용자 이메일입니다. 이메일 형식이어야 합니다.
        username:
          type: string
          description: 사용자 이름입니다. 최소 2자 이상에서 최대 12자 이하여야 합니다.
    users-id1467703423:
      type: object
      properties:
        id:
          type: number
          description: 사용자 아이디입니다.
        profileImageUrl:
          type: string
          description: 사용자 프로필 사진입니다.
        introduction:
          type: string
          description: 사용자 소개글입니다.
        username:
          type: string
          description: 사용자 이름입니다.
    users-id-details-1536877440:
      type: object
      properties:
        address:
          type: object
          properties:
            region2DepthName:
              type: string
              description: 시군구명입니다.
            zoneNo:
              type: number
              description: 우편번호입니다.
            region3DepthName:
              type: string
              description: 읍면동명입니다.
            roadAddressName:
              type: string
              description: 도로명주소입니다.
            region1DepthName:
              type: string
              description: 시구명입니다.
            addressName:
              type: string
              description: 지번주소입니다.
          description: 사용자 주소입니다.
        id:
          type: number
          description: 사용자 아이디입니다.
        profileImageUrl:
          type: string
          description: 사용자 프로필 사진입니다.
        introduction:
          type: string
          description: 사용자 소개글입니다.
        email:
          type: string
          description: 사용자 이메일입니다.
        username:
          type: string
          description: 사용자 이름입니다.
    users-804852034:
      type: object
      properties:
        size:
          type: number
          description: 한 페이지에 보여줄 사이즈 수입니다.
        last:
          type: boolean
          description: 마지막 페이지 여부입니다.
        totalPages:
          type: number
          description: 전체 페이지 수입니다.
        first:
          type: boolean
          description: 첫 페이지 여부입니다.
        content:
          type: array
          description: 페이지 요소 리스트입니다.
          items:
            type: object
            properties:
              id:
                type: number
                description: 사용자 아이디입니다.
              profileImageUrl:
                type: string
                description: 사용자 프로필 사진입니다.
              username:
                type: string
                description: 사용자 이름입니다.
        empty:
          type: boolean
          description: 리스트가 비어 있는지 여부입니다.
        totalElements:
          type: number
          description: 전체 요소 수입니다.
    users-395173474:
      type: object
      properties:
        code:
          type: string
          description: 에러 코드입니다.
        message:
          type: string
          description: 에러 메시지입니다.
        errors:
          type: array
          description: 필드 에러입니다. 필드 검증 시에만 존재합니다.
          items:
            type: object
            properties:
              reason:
                type: string
                description: 검증에 실패한 이유입니다.
              field:
                type: string
                description: 검증에 실패한 필드명입니다.
              value:
                type: string
                description: 검증에 실패한 필드값입니다.
        status:
          type: number
          description: 응답 코드입니다.
